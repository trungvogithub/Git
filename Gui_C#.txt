using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO.Ports;
using ZedGraph;

namespace WindowsFormsApp1
{
    public partial class Form1 : Form
    {
        List<byte> send_this = new List<byte>(); // du lieu dieu kien gui di
        // gia tri ve do thi
        int sobytenhan;
        UInt16 _time__plot = 0;
        UInt16[] _value = { 0, 0 };
        byte[] _gepnhan = { 0,0,0,0};// sau nhan 4  phan tu se ghep lai va ve ngay
        // thong bao ve loi gia tri nhap
        public string _canhbaobiendo;
        public string _canhbaotanso;
        public string tx;
        // bien check 
        List<string> _portName = new List<string>();
        Boolean Thanhcong1 = false;
        Boolean Thanhcong2 = false;
        Boolean CanhB1_biendo = false;
        Boolean CanhB2_biendo = false;
        Boolean CanhB1_tanso = false;
        Boolean CanhB2_tanso = false;
        // cac gia tri gui di
        public UInt16[] wf = { 0, 0 };// 2 byte
        public float[] biendo = { 0, 0 };//8 byte
        public float[] tanso = { 0, 0 };// 8 byte
        public float[] offset= { 0, 0 };// 8 byte
        // gia tri tham chieu quy dinh
        const float Vref = 3.0F;
        const float Lf = 0.2F; // nguong duoi cua tan sao
        const float Lh = 15000F;// nguong tren cua tan so
        // bient am khong y nghia nhung khong xoa duoc
        float temp1 = 0;
        float temp2 = 0;
        float temp3 = 0;

        public Form1()
        {
            InitializeComponent();
            Config_plot();
        }       
        
        // khai bao do thi
        GraphPane myPlot1 = new GraphPane();
        GraphPane myPlot2 = new GraphPane();

        PointPairList listplot1 = new PointPairList();
        PointPairList listplot2 = new PointPairList();

        LineItem myCurve1 ;
        LineItem myCurve2 ;

        float toado = 0f;
        double[] giatri = { 0, 0 };
        float _tsample = 1f;

        private void Config_plot()
        {
            myPlot1 = Plot1.GraphPane;
            myPlot2 = Plot2.GraphPane;

            myPlot1.Title.Text = " CHANNEL 1" ;
            myPlot2.Title.Text = " CHANNEL 2" ;

            myPlot1.XAxis.Title.Text = " t(s)";
            myPlot2.XAxis.Title.Text = " t(s)";

            myPlot1.YAxis.Title.Text = comboboxWF1.Text;
            myPlot2.YAxis.Title.Text = comboboxWF2.Text;

            myPlot1.YAxis.Scale.Min = 0;
            myPlot2.YAxis.Scale.Min = 0;

            myPlot1.YAxis.Scale.Max = 4;
            myPlot2.YAxis.Scale.Max = 4;

            myPlot1.XAxis.MajorGrid.IsVisible = true;
            myPlot2.XAxis.MajorGrid.IsVisible = true;
            myPlot1.YAxis.MajorGrid.IsVisible = true;
            myPlot2.YAxis.MajorGrid.IsVisible = true;

            myCurve1 = myPlot1.AddCurve(null, listplot1, Color.Red, SymbolType.None);
            myCurve2 = myPlot2.AddCurve(null, listplot2, Color.Red, SymbolType.None);

            myCurve1.Line.Width = 2;
            myCurve2.Line.Width = 2;
        }
        /*
         * ham truyen vao mot mang 4 byte 
         * tra lai mot mang gom 2 so Uint16
         * */
        private UInt16[] Uint16FromByte(byte[] dulieu)
        {
            UInt16[] _byteToUint16 = { 0, 0 };
            _byteToUint16[0] = BitConverter.ToUInt16(dulieu,0);
            _byteToUint16[1] = BitConverter.ToUInt16(dulieu, 2);
            return _byteToUint16;
            
        }
        /// <summary>
        /// thoi gian tang len lien tuc va nhan 1ms
        /// gia tri ve phu thuoc vao _value[]
        /// refeseh do thi lien tuc de co the cap nhat bang Timer
        /// </summary>
        private void Draw_graph()
        {
                
            toado = (float)(_time__plot*_tsample/1000);
            giatri[0]= (float)(_value[0]*3f/4095f);
            giatri[1] = (float)(_value[1] * 3f / 4095f);
            listplot1.Add(new PointPair(toado,giatri[0]));
            listplot2.Add(new PointPair(toado,giatri[1]));
 
            myPlot1.AxisChange();
            myPlot2.AxisChange();

            Plot1.Refresh();
            Plot2.Refresh();
        }
  
        /*
         * doi so cua ham la bien do neu thanh cong
         *  ham nay chi sua dung trong scope 
         */
        private string LoiCanhBaoBienDo(float t1, float t2)
        {

            if ((!CanhB1_biendo) & (!CanhB2_biendo))// CA 2 DEU TOT
            {
                _canhbaobiendo = "BIEN DO CUA CHANNEL 1 LA " + t1.ToString() + " VA CHANNEL 2 LA " + t2.ToString();
            }
            else if ((!CanhB1_biendo) & (CanhB2_biendo)) // bien do 1 khong canh bao, bien do 2 co van de
            {
                _canhbaobiendo = "BIEN DO CUA CHANNEL 1 LA " + t1.ToString() + " VA NGO RA CHANNEL 2 CO THE MEO DANG";
            }
            else if ((CanhB1_biendo) & (!CanhB2_biendo)) // bien do 1 co van de , bien do 2 khong canh bao
            {
                _canhbaobiendo = "BIEN DO CUA CHANNEL 2 LA " + t2.ToString() + " VA NGO RA CHANNEL 1 CO THE MEO DANG";
            }
            else
                _canhbaobiendo = " BIEN DO CA HAI CHANNEL CO THE MEO DANG";
            return _canhbaobiendo;
        }

        private string LoiCanhBaoTanSo(float t3, float t4)
        {
            if ((!CanhB1_tanso) & (!CanhB2_tanso)) // canh 2 tang so deu tot
            {
                _canhbaotanso = "TAN SO CHANNEL 1 LA " + t3.ToString() + " VA TAN SO CHANNEL 2 LA " + t4.ToString();
            }
            else if ((!CanhB1_tanso) & (CanhB2_tanso)) // 1 tot 2 co van de
            {
                _canhbaotanso = "TAN SO CHANNEL 1 LA " + t3.ToString() + " VA TAN SO CHANNEL 2 KHONG THE DAP UNG";
            }
            else if ((CanhB1_tanso) & (!CanhB2_tanso))// 2 tot va 1 co van de
            {
                _canhbaotanso = "TAN SO CHANNEL 2 LA " + t4.ToString() + " VA TAN SO CHANNEL 1 KHONG THE DAP UNG";
            }
            else
                _canhbaotanso = " TAN SO CA HAI CHANNEL KHONG THE DAP UNG";
            return _canhbaotanso;
        }

        private void PortNumber_Click(object sender, EventArgs e)
        {
            PortNumber.Items.Clear();
            for ( int i=0;i< SerialPort.GetPortNames().Length; i++)
            {
                PortNumber.Items.Add(SerialPort.GetPortNames()[i]);
            }

        }
        // cai dat serial port va mo no
        private void LoadItem_Click(object sender, EventArgs e)
        {
            try
            {
                // cac thuoc tinh cua serialPort1 duoc cai dat vao text cua combobox             
                serialPort1.PortName = PortNumber.Text;
                serialPort1.BaudRate = Convert.ToInt32(BaudRate.Text);
                serialPort1.DataBits = Convert.ToInt32(NumberOfData.Text);
                switch (NumberOfStopBit.Text)
                {
                    case "1": serialPort1.StopBits = StopBits.One;
                        break;
                    case "1.5": serialPort1.StopBits = StopBits.OnePointFive;
                        break;
                    case "2": serialPort1.StopBits = StopBits.Two;
                        break;
                }
                switch (NumberOfParityBit.Text)
                {
                    case " None": serialPort1.Parity = Parity.None;
                        break;
                    case " even":
                        serialPort1.Parity = Parity.Even;
                        break;
                    case " odd":
                        serialPort1.Parity = Parity.Odd;
                        break;

                }
                serialPort1.ReadBufferSize = 1000;// set buffer max gang
                timer2.Enabled = true;
                timer3.Enabled = true;
                serialPort1.Open();
                serialPort1.DiscardInBuffer();
                serialPort1.DiscardOutBuffer();
                progressBar1.Value = 100;
            }
            catch( Exception err)
            {
                MessageBox.Show(err.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            if (serialPort1.IsOpen != false)
            {
                groupBox1.Enabled = false;
                StatusConnect.Text = " CONNECTED";
                StatusConnect.ForeColor = Color.Green;
            }

        }
        // tat serial port
        private void CloseButton_Click(object sender, EventArgs e)
        {
            if (serialPort1.IsOpen)
            {
                serialPort1.DiscardInBuffer();
                serialPort1.Close();
                progressBar1.Value = 0;
                groupBox1.Enabled = true;
                StatusConnect.Text = "DISCONECT";
                StatusConnect.ForeColor = Color.Red;
                timer1.Enabled = false;
                timer2.Enabled = false;
                timer3.Enabled = false;
            }
        }
        // tao kieu du lieu truyen so

        private void Start_Click(object sender, EventArgs e)
        {
            CanhB1_biendo = CanhB1_tanso = CanhB2_biendo =CanhB2_tanso = false;
            Thanhcong1 = Thanhcong2 = false;
            // xu ly ngo ra 1
            if ((float.TryParse(TextBiendo1.Text, out temp1))
                & (float.TryParse(TextTanso1.Text, out temp2))
                & (float.TryParse(TextOffset1.Text, out temp3)))
            {
                Thanhcong1 = true;
                biendo[0] = float.Parse(TextBiendo1.Text);
                tanso[0] = float.Parse(TextTanso1.Text);
                offset[0] = float.Parse(TextOffset1.Text);
                switch (comboboxWF1.Text)
                {
                    case "SIN":
                        wf[0] = 0;
                        break;
                    case "TRIANGLE":
                        wf[0] = 1;
                        break;
                    case "SQUARE":
                        wf[0] = 2;
                        break;
                }
                /*
                * dieu kien offset - A < 0
                * dieu kien A + offset > Vref
                * chi warning chu khong can
                * */
                if (((biendo[0] + offset[0]) > Vref) | ((offset[0] - biendo[0]) < 0))
                    {
                        CanhB1_biendo = true;                
                    }
                if ((tanso[0] < Lf) | (tanso[0] > Lh))
                    {
                        CanhB1_tanso = true;
                    }
            }
            else
            {
                Thanhcong1 = false;
            }

            // xu ly ngo ra 2
            if ((float.TryParse(TextBiendo2.Text, out temp1))
                & (float.TryParse(TextTanso2.Text, out temp2))
                & (float.TryParse(TextOffset2.Text, out temp3)))
            {
                Thanhcong2 = true;
                biendo[1] = Convert.ToSingle(TextBiendo2.Text);
                tanso[1] = Convert.ToSingle(TextTanso2.Text);
                offset[1] = Convert.ToSingle(TextOffset2.Text);

                switch (comboboxWF2.Text)
                {
                    case "SIN":
                        wf[1] = 0;
                        break;
                    case "TRIANGLE":
                        wf[1] = 1;
                        break;
                    case "SQUARE":
                        wf[1] = 2;
                        break;
                    default:
                        wf[1] = 0;
                        break;
                }
                if (((biendo[1] + offset[1]) > Vref) | ((offset[1] - biendo[1]) < 0f))
                    {
                        CanhB2_biendo = true;
                    }
                if ((tanso[1] < Lf) | (tanso[1] > Lh))
                    {
                        CanhB2_tanso = true;
                    }

            }
            else
            {
                Thanhcong2 = false;
            }


            if((!Thanhcong1) & (!Thanhcong2))
            {
                // ca hai kenh deu khong nhap duoc
                 tx = " CHUA NHAP THONG TIN HOAC NHAP SAI CHANNEL 1 VA 2";
            }
            else if ((!Thanhcong1) & (Thanhcong2))
            {
                //kenh 2 da nhap duoc
                 tx = " CHUA NHAP THONG TIN HOAC NHAP SAI CHANNEL 1 ";
            }
            else if ((Thanhcong1) & (!Thanhcong2))
            {
                // KENH 1 DA NHAP DUOC
                 tx = " CHUA NHAP THONG TIN HOAC NHAP SAI CHANNEL 2";
            }
            if ((!Thanhcong1) | (!Thanhcong2)) // mot trong 2 khong thanh cong
            {
                MessageBox.Show(tx, "LOI NHAP DU LIEU", MessageBoxButtons.RetryCancel, MessageBoxIcon.Hand);

            }
            else // ca hai thanh cong
            {
                DialogResult result = MessageBox.Show("DANG SONG KENH 1 LA "+comboboxWF1.Text + Environment.NewLine
                + "DANG SONG KENH 2 LA " + comboboxWF2.Text + Environment.NewLine 
                + LoiCanhBaoBienDo(biendo[0],biendo[1]) + Environment.NewLine +
                LoiCanhBaoTanSo(tanso[0],tanso[1]), " THONG TIN",MessageBoxButtons.OK,MessageBoxIcon.Information  );

                if (result == DialogResult.OK)
                {
                    /// bat dau qua trinh chuyen du lieu vao mang gui di
                    send_this.Clear();
                    var x = new byte[8];
                    // bat dau chep vo list
                    for (int i = 0; i < 2; i++)
                    {
                        x = BitConverter.GetBytes(wf[i]);
                        for (int j = 0; j < 2; j++)
                        {
                            send_this.Add(x[j]);
                        }

                    }
                    // cong bien do vao list
                    for (int i = 0; i < 2; i++)
                    {
                        x = BitConverter.GetBytes(biendo[i]);
                        for (int j = 0; j < 4; j++)
                        {
                            send_this.Add(x[j]);
                        }

                    }
                    // cong tan so vao list
                    for (int i = 0; i < 2; i++)
                    {
                        x = BitConverter.GetBytes(tanso[i]);
                        for (int j = 0; j < 4; j++)
                        {
                            send_this.Add(x[j]);
                        }

                    }
                    // cong offset vao list
                    for (int i = 0; i < 2; i++)
                    {
                        x = BitConverter.GetBytes(offset[i]);
                        for (int j = 0; j < 4; j++)
                        {
                            send_this.Add(x[j]);
                        }

                    }
                    myPlot1.YAxis.Title.Text = comboboxWF1.Text;
                    myPlot2.YAxis.Title.Text = comboboxWF2.Text;

                    Plot1.Refresh();
                    Plot2.Refresh();
                    //chuyen list thanh byte[] de truyen uart
                    byte[] send = send_this.ToArray();
                    if (serialPort1.IsOpen != false)
                    serialPort1.Write(send, 0, send.Length);
                }

            }

        }





        private void timer1_Tick(object sender, EventArgs e)
        {
            // ta se thuc hien chuyen doi va ve do thi moi ms luon
            _value = Uint16FromByte(_gepnhan);
            Draw_graph();
            //MessageBox.Show(serialPort1.BytesToRead.ToString());
        }

        private void button1_Click(object sender, EventArgs e)
        {
            timer1.Enabled = true;
            _time__plot = 0;
            myCurve1.Clear();
            myCurve2.Clear();
            Plot1.Refresh();
            Plot2.Refresh();


        }

        private void serialPort1_DataReceived(object sender, SerialDataReceivedEventArgs e)
        {
            try
            {
                if (sobytenhan > 3)
                {
                    serialPort1.Read(_gepnhan, 0, 4);
                    ++_time__plot;
                }
            }
            catch (Exception)
            {

            }
           
        }

        private void button2_Click(object sender, EventArgs e)
        {
            timer1.Enabled = false;
        }

        private void timer2_Tick(object sender, EventArgs e)
        {
            if(serialPort1.IsOpen)
            sobytenhan = serialPort1.BytesToRead;
        }


        private void timer3_Tick(object sender, EventArgs e)
        {
            int j = 0;
            _portName.Clear();
            // sau 100ms thi tim lai port name
            foreach(string _namePort_temp in SerialPort.GetPortNames())
            {
                if (_namePort_temp == PortNumber.Text)
                    j++;
            }
            if(j == 0)// khong con ten cong com nua
            {
                serialPort1.Close();
                progressBar1.Value = 0;
                groupBox1.Enabled = true;
                StatusConnect.Text = "DISCONECT";
                StatusConnect.ForeColor = Color.Red;
                timer1.Enabled = false;
                timer2.Enabled = false;
                timer3.Enabled = false;
                MessageBox.Show(" XAY RA LOI VOI SERIAL PORT" + Environment.NewLine
                    + " VUI LONG KIEM TRA LAI");

            }



        }
    }
}

